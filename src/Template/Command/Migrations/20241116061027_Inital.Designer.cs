// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Template.Command.Database;

#nullable disable

namespace Template.Command.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20241116061027_Inital")]
    partial class Inital
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("IngredientPizza", b =>
                {
                    b.Property<Guid>("IngredientId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PizzaId")
                        .HasColumnType("uuid");

                    b.HasKey("IngredientId", "PizzaId");

                    b.HasIndex("PizzaId");

                    b.ToTable("IngredientPizza", (string)null);
                });

            modelBuilder.Entity("RecipePizzaIngredient", b =>
                {
                    b.Property<Guid>("IngredientId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RecipePizzaId")
                        .HasColumnType("uuid");

                    b.HasKey("IngredientId", "RecipePizzaId");

                    b.HasIndex("RecipePizzaId");

                    b.ToTable("RecipePizzaIngredient", (string)null);

                    b.HasData(
                        new
                        {
                            IngredientId = new Guid("0046619f-4168-410d-a0ee-c418f2214e4a"),
                            RecipePizzaId = new Guid("ab758b64-6c21-4ee8-918b-16214e39304f")
                        },
                        new
                        {
                            IngredientId = new Guid("02ed3593-31c2-4d3a-85fa-8c45bd457bf6"),
                            RecipePizzaId = new Guid("ab758b64-6c21-4ee8-918b-16214e39304f")
                        },
                        new
                        {
                            IngredientId = new Guid("852686c2-4a67-4750-901d-e36f811323d0"),
                            RecipePizzaId = new Guid("ab758b64-6c21-4ee8-918b-16214e39304f")
                        },
                        new
                        {
                            IngredientId = new Guid("0046619f-4168-410d-a0ee-c418f2214e4a"),
                            RecipePizzaId = new Guid("6f491d54-96bd-48e1-a46a-612cbc77e152")
                        },
                        new
                        {
                            IngredientId = new Guid("acc22e08-c701-4202-80c7-577d07ecd42e"),
                            RecipePizzaId = new Guid("6f491d54-96bd-48e1-a46a-612cbc77e152")
                        },
                        new
                        {
                            IngredientId = new Guid("cc8ce24c-e369-410f-ad52-ab6b8cb4f9bf"),
                            RecipePizzaId = new Guid("edb52c01-e497-43a3-9542-34df6d5df6b2")
                        },
                        new
                        {
                            IngredientId = new Guid("8928edb4-9f68-4576-9f97-72f48e88bbe6"),
                            RecipePizzaId = new Guid("edb52c01-e497-43a3-9542-34df6d5df6b2")
                        },
                        new
                        {
                            IngredientId = new Guid("4783de6f-1270-41f5-bf00-6615cf7c22b5"),
                            RecipePizzaId = new Guid("edb52c01-e497-43a3-9542-34df6d5df6b2")
                        },
                        new
                        {
                            IngredientId = new Guid("e6a79ab3-8267-4b16-b839-56bba798c856"),
                            RecipePizzaId = new Guid("edb52c01-e497-43a3-9542-34df6d5df6b2")
                        },
                        new
                        {
                            IngredientId = new Guid("afa850c3-798c-4bdc-aa97-98676435544c"),
                            RecipePizzaId = new Guid("8181b572-2d65-49fb-a726-722bb66fcba7")
                        },
                        new
                        {
                            IngredientId = new Guid("cf8138b3-9655-4575-83ad-7beb4bd2a2da"),
                            RecipePizzaId = new Guid("8181b572-2d65-49fb-a726-722bb66fcba7")
                        },
                        new
                        {
                            IngredientId = new Guid("e6a79ab3-8267-4b16-b839-56bba798c856"),
                            RecipePizzaId = new Guid("8181b572-2d65-49fb-a726-722bb66fcba7")
                        },
                        new
                        {
                            IngredientId = new Guid("380c18ff-76b7-4498-8c69-94e342c76953"),
                            RecipePizzaId = new Guid("9b18b54b-6e30-454b-b840-01e36c9efab9")
                        },
                        new
                        {
                            IngredientId = new Guid("4783de6f-1270-41f5-bf00-6615cf7c22b5"),
                            RecipePizzaId = new Guid("9b18b54b-6e30-454b-b840-01e36c9efab9")
                        },
                        new
                        {
                            IngredientId = new Guid("50954a8c-e0c2-4ede-9655-fea3b84a1ed8"),
                            RecipePizzaId = new Guid("9b18b54b-6e30-454b-b840-01e36c9efab9")
                        },
                        new
                        {
                            IngredientId = new Guid("91ff1bec-3bc3-4d6d-a239-8a5be4ea04d5"),
                            RecipePizzaId = new Guid("9b18b54b-6e30-454b-b840-01e36c9efab9")
                        },
                        new
                        {
                            IngredientId = new Guid("acc22e08-c701-4202-80c7-577d07ecd42e"),
                            RecipePizzaId = new Guid("967bb814-adef-4b52-874f-0ed7310fc7bb")
                        },
                        new
                        {
                            IngredientId = new Guid("2de173f9-9ccc-438a-b20c-e385e6ce05bf"),
                            RecipePizzaId = new Guid("967bb814-adef-4b52-874f-0ed7310fc7bb")
                        },
                        new
                        {
                            IngredientId = new Guid("f47af8d8-b9fb-442e-b03d-959b47c511c0"),
                            RecipePizzaId = new Guid("967bb814-adef-4b52-874f-0ed7310fc7bb")
                        },
                        new
                        {
                            IngredientId = new Guid("a0632a81-2282-4bd5-a359-8553416be456"),
                            RecipePizzaId = new Guid("967bb814-adef-4b52-874f-0ed7310fc7bb")
                        });
                });

            modelBuilder.Entity("Template.Domain.BorderAggregate.Border", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Border", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("bfae8279-4963-4135-af85-9236b5cd3b33"),
                            Description = "Sin Borde"
                        },
                        new
                        {
                            Id = new Guid("8ae7e6c1-f669-4876-ba14-9499c5e8e208"),
                            Description = "Borde de queso"
                        },
                        new
                        {
                            Id = new Guid("479f31ff-01f1-43af-83a0-613334bf7cd6"),
                            Description = "Borde relleno de pepperoni"
                        },
                        new
                        {
                            Id = new Guid("56970674-45a3-435b-9091-a3522270564c"),
                            Description = "Borde de ajo y mantequilla"
                        },
                        new
                        {
                            Id = new Guid("b8cff44f-47d9-477c-a19c-884010caa200"),
                            Description = "Borde crujiente"
                        },
                        new
                        {
                            Id = new Guid("ed3a9f00-2674-49b0-9102-b74712a63c36"),
                            Description = "Borde de masa fina"
                        },
                        new
                        {
                            Id = new Guid("79cdbd1a-afc5-40b9-9c8d-abde59a2e1b1"),
                            Description = "Borde con parmesano"
                        },
                        new
                        {
                            Id = new Guid("4c6dc9c0-6815-455d-9926-4f7975c14e99"),
                            Description = "Borde relleno de jalapeños"
                        },
                        new
                        {
                            Id = new Guid("58de5407-766a-45a7-8493-198bf726ac74"),
                            Description = "Borde relleno de queso cheddar"
                        },
                        new
                        {
                            Id = new Guid("e21110e7-8295-47a3-8bec-9958ed1b8aae"),
                            Description = "Borde de pan de ajo"
                        },
                        new
                        {
                            Id = new Guid("c9c7114a-da6c-4706-8fa6-26bd852c736d"),
                            Description = "Borde sin gluten"
                        },
                        new
                        {
                            Id = new Guid("7bd0c1e5-06c8-4fb3-bb29-d78e430c6426"),
                            Description = "Borde tradicional"
                        },
                        new
                        {
                            Id = new Guid("c4cb884f-0fc4-47be-9fb0-3ac576fffc11"),
                            Description = "Borde relleno de salchicha"
                        },
                        new
                        {
                            Id = new Guid("bf658193-4602-41df-b0fb-cba8a9b8ebb9"),
                            Description = "Borde extra crujiente"
                        },
                        new
                        {
                            Id = new Guid("4dd4f15b-5941-45dd-af60-8454d9dd8501"),
                            Description = "Borde con especias italianas"
                        },
                        new
                        {
                            Id = new Guid("1ef9c581-bd5d-451c-a244-951efec08571"),
                            Description = "Borde con orégano y aceite de oliva"
                        });
                });

            modelBuilder.Entity("Template.Domain.ClientAggregate.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("CellPhone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Client", (string)null);
                });

            modelBuilder.Entity("Template.Domain.IngredientsAggregate.Ingredient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Ingredients", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("0046619f-4168-410d-a0ee-c418f2214e4a"),
                            Amount = 2.0m,
                            Name = "Queso"
                        },
                        new
                        {
                            Id = new Guid("02ed3593-31c2-4d3a-85fa-8c45bd457bf6"),
                            Amount = 1.5m,
                            Name = "Salsa de Tomate"
                        },
                        new
                        {
                            Id = new Guid("acc22e08-c701-4202-80c7-577d07ecd42e"),
                            Amount = 2.5m,
                            Name = "Pepperoni"
                        },
                        new
                        {
                            Id = new Guid("380c18ff-76b7-4498-8c69-94e342c76953"),
                            Amount = 1.0m,
                            Name = "Champiñones"
                        },
                        new
                        {
                            Id = new Guid("4783de6f-1270-41f5-bf00-6615cf7c22b5"),
                            Amount = 0.8m,
                            Name = "Cebolla"
                        },
                        new
                        {
                            Id = new Guid("50954a8c-e0c2-4ede-9655-fea3b84a1ed8"),
                            Amount = 1.2m,
                            Name = "Aceitunas Negras"
                        },
                        new
                        {
                            Id = new Guid("afa850c3-798c-4bdc-aa97-98676435544c"),
                            Amount = 2.0m,
                            Name = "Jamón"
                        },
                        new
                        {
                            Id = new Guid("cf8138b3-9655-4575-83ad-7beb4bd2a2da"),
                            Amount = 1.5m,
                            Name = "Piña"
                        },
                        new
                        {
                            Id = new Guid("2de173f9-9ccc-438a-b20c-e385e6ce05bf"),
                            Amount = 2.5m,
                            Name = "Tocino"
                        },
                        new
                        {
                            Id = new Guid("8928edb4-9f68-4576-9f97-72f48e88bbe6"),
                            Amount = 2.5m,
                            Name = "Pollo"
                        },
                        new
                        {
                            Id = new Guid("f47af8d8-b9fb-442e-b03d-959b47c511c0"),
                            Amount = 3.0m,
                            Name = "Carne de Res"
                        },
                        new
                        {
                            Id = new Guid("cc8ce24c-e369-410f-ad52-ab6b8cb4f9bf"),
                            Amount = 1.8m,
                            Name = "Salsa BBQ"
                        },
                        new
                        {
                            Id = new Guid("e6a79ab3-8267-4b16-b839-56bba798c856"),
                            Amount = 2.0m,
                            Name = "Queso Mozzarella"
                        },
                        new
                        {
                            Id = new Guid("1f5fb29c-2373-4468-af49-efda6adb3122"),
                            Amount = 1.5m,
                            Name = "Queso Parmesano"
                        },
                        new
                        {
                            Id = new Guid("cc6e81a7-ab99-48da-a27a-18567e610319"),
                            Amount = 1.5m,
                            Name = "Salsa Alfredo"
                        },
                        new
                        {
                            Id = new Guid("852686c2-4a67-4750-901d-e36f811323d0"),
                            Amount = 0.7m,
                            Name = "Albahaca Fresca"
                        },
                        new
                        {
                            Id = new Guid("91ff1bec-3bc3-4d6d-a239-8a5be4ea04d5"),
                            Amount = 1.0m,
                            Name = "Tomates Cherry"
                        },
                        new
                        {
                            Id = new Guid("a0632a81-2282-4bd5-a359-8553416be456"),
                            Amount = 2.8m,
                            Name = "Chorizo"
                        },
                        new
                        {
                            Id = new Guid("63f1afea-7706-43c6-bc87-5b35a0e5485b"),
                            Amount = 1.0m,
                            Name = "Jalapeños"
                        },
                        new
                        {
                            Id = new Guid("74fa2993-a6fe-4bc8-aeee-fdd6fffc29c1"),
                            Amount = 2.0m,
                            Name = "Anchoas"
                        });
                });

            modelBuilder.Entity("Template.Domain.OrderAggregate.DeliveryOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Addres")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsFree")
                        .HasColumnType("boolean");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("DeliveryOrder", (string)null);
                });

            modelBuilder.Entity("Template.Domain.OrderAggregate.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsFreeDeviliry")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("Template.Domain.OrderAggregate.Pizza", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<decimal>("AmountBase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("BorderIds")
                        .HasColumnType("uuid");

                    b.Property<int>("CountPizza")
                        .HasColumnType("integer");

                    b.Property<bool>("IsPersonalizate")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("OrderIds")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("RecipePizzaId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("BorderIds");

                    b.HasIndex("OrderIds");

                    b.HasIndex("RecipePizzaId");

                    b.ToTable("Pizza", (string)null);
                });

            modelBuilder.Entity("Template.Domain.RecipePizzaAggregate.RecipePizza", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("RecipePizza", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ab758b64-6c21-4ee8-918b-16214e39304f"),
                            Description = "Pizza clásica con salsa de tomate, mozzarella y albahaca fresca.",
                            Name = "Pizza Margarita",
                            Price = 8.5m
                        },
                        new
                        {
                            Id = new Guid("6f491d54-96bd-48e1-a46a-612cbc77e152"),
                            Description = "Pizza con pepperoni y queso mozzarella.",
                            Name = "Pizza Pepperoni",
                            Price = 10.0m
                        },
                        new
                        {
                            Id = new Guid("edb52c01-e497-43a3-9542-34df6d5df6b2"),
                            Description = "Pizza con salsa BBQ, pollo, cebolla y queso mozzarella.",
                            Name = "Pizza BBQ Chicken",
                            Price = 12.0m
                        },
                        new
                        {
                            Id = new Guid("8181b572-2d65-49fb-a726-722bb66fcba7"),
                            Description = "Pizza con jamón, piña y queso mozzarella.",
                            Name = "Pizza Hawaiian",
                            Price = 11.0m
                        },
                        new
                        {
                            Id = new Guid("9b18b54b-6e30-454b-b840-01e36c9efab9"),
                            Description = "Pizza vegetariana con champiñones, pimientos, cebolla y aceitunas negras.",
                            Name = "Pizza Veggie Lovers",
                            Price = 10.0m
                        },
                        new
                        {
                            Id = new Guid("967bb814-adef-4b52-874f-0ed7310fc7bb"),
                            Description = "Pizza con pepperoni, tocino, carne de res y chorizo.",
                            Name = "Pizza Meat Lovers",
                            Price = 14.0m
                        });
                });

            modelBuilder.Entity("IngredientPizza", b =>
                {
                    b.HasOne("Template.Domain.IngredientsAggregate.Ingredient", null)
                        .WithMany()
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Template.Domain.OrderAggregate.Pizza", null)
                        .WithMany()
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RecipePizzaIngredient", b =>
                {
                    b.HasOne("Template.Domain.IngredientsAggregate.Ingredient", null)
                        .WithMany()
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Template.Domain.RecipePizzaAggregate.RecipePizza", null)
                        .WithMany()
                        .HasForeignKey("RecipePizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Template.Domain.OrderAggregate.DeliveryOrder", b =>
                {
                    b.HasOne("Template.Domain.OrderAggregate.Order", "Order")
                        .WithOne("DeliveryOrders")
                        .HasForeignKey("Template.Domain.OrderAggregate.DeliveryOrder", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Template.Domain.OrderAggregate.Order", b =>
                {
                    b.HasOne("Template.Domain.ClientAggregate.Client", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Template.Domain.OrderAggregate.Pizza", b =>
                {
                    b.HasOne("Template.Domain.BorderAggregate.Border", "Borders")
                        .WithMany("Pizzas")
                        .HasForeignKey("BorderIds");

                    b.HasOne("Template.Domain.OrderAggregate.Order", "Order")
                        .WithMany("Pizzas")
                        .HasForeignKey("OrderIds")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Template.Domain.RecipePizzaAggregate.RecipePizza", "RecipePizza")
                        .WithMany("Pizzas")
                        .HasForeignKey("RecipePizzaId");

                    b.Navigation("Borders");

                    b.Navigation("Order");

                    b.Navigation("RecipePizza");
                });

            modelBuilder.Entity("Template.Domain.BorderAggregate.Border", b =>
                {
                    b.Navigation("Pizzas");
                });

            modelBuilder.Entity("Template.Domain.ClientAggregate.Client", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Template.Domain.OrderAggregate.Order", b =>
                {
                    b.Navigation("DeliveryOrders");

                    b.Navigation("Pizzas");
                });

            modelBuilder.Entity("Template.Domain.RecipePizzaAggregate.RecipePizza", b =>
                {
                    b.Navigation("Pizzas");
                });
#pragma warning restore 612, 618
        }
    }
}
