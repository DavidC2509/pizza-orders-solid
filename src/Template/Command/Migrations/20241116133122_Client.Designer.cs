// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Template.Command.Database;

#nullable disable

namespace Template.Command.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20241116133122_Client")]
    partial class Client
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("IngredientPizza", b =>
                {
                    b.Property<Guid>("IngredientId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PizzaId")
                        .HasColumnType("uuid");

                    b.HasKey("IngredientId", "PizzaId");

                    b.HasIndex("PizzaId");

                    b.ToTable("IngredientPizza", (string)null);
                });

            modelBuilder.Entity("RecipePizzaIngredient", b =>
                {
                    b.Property<Guid>("IngredientId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RecipePizzaId")
                        .HasColumnType("uuid");

                    b.HasKey("IngredientId", "RecipePizzaId");

                    b.HasIndex("RecipePizzaId");

                    b.ToTable("RecipePizzaIngredient", (string)null);

                    b.HasData(
                        new
                        {
                            IngredientId = new Guid("06a2162e-a3ef-4a9b-9b59-efe558cb3b98"),
                            RecipePizzaId = new Guid("a5969e99-f699-49c6-aa35-59915579b5ce")
                        },
                        new
                        {
                            IngredientId = new Guid("bb8ead18-a0fc-4d64-a006-70d3e7657c73"),
                            RecipePizzaId = new Guid("a5969e99-f699-49c6-aa35-59915579b5ce")
                        },
                        new
                        {
                            IngredientId = new Guid("c1acc73c-205c-442e-beb0-cd1ecdc895ee"),
                            RecipePizzaId = new Guid("a5969e99-f699-49c6-aa35-59915579b5ce")
                        },
                        new
                        {
                            IngredientId = new Guid("06a2162e-a3ef-4a9b-9b59-efe558cb3b98"),
                            RecipePizzaId = new Guid("9b29438f-528b-4d43-bdcc-ea8201b88ef1")
                        },
                        new
                        {
                            IngredientId = new Guid("0489f895-910f-413c-936a-417afddbfad3"),
                            RecipePizzaId = new Guid("9b29438f-528b-4d43-bdcc-ea8201b88ef1")
                        },
                        new
                        {
                            IngredientId = new Guid("81e7fdbd-715a-41fb-a450-c49bcff1c0be"),
                            RecipePizzaId = new Guid("caed479b-1e3c-42b3-b284-bd18b1f8c0d6")
                        },
                        new
                        {
                            IngredientId = new Guid("5d3e0af6-07d2-4396-8a9d-9362ecb1cedb"),
                            RecipePizzaId = new Guid("caed479b-1e3c-42b3-b284-bd18b1f8c0d6")
                        },
                        new
                        {
                            IngredientId = new Guid("4209713e-aa77-43f7-b8b1-eca4c0ad8ee9"),
                            RecipePizzaId = new Guid("caed479b-1e3c-42b3-b284-bd18b1f8c0d6")
                        },
                        new
                        {
                            IngredientId = new Guid("7f4b8d20-ebaa-47bf-a527-aff38b9a7a18"),
                            RecipePizzaId = new Guid("caed479b-1e3c-42b3-b284-bd18b1f8c0d6")
                        },
                        new
                        {
                            IngredientId = new Guid("f03d8891-170e-4e51-b5b9-8c9533b6e7b9"),
                            RecipePizzaId = new Guid("289b34c2-bcdf-45a0-8b5a-4f02068210b2")
                        },
                        new
                        {
                            IngredientId = new Guid("135a8ae8-e779-40aa-8713-006670352c08"),
                            RecipePizzaId = new Guid("289b34c2-bcdf-45a0-8b5a-4f02068210b2")
                        },
                        new
                        {
                            IngredientId = new Guid("7f4b8d20-ebaa-47bf-a527-aff38b9a7a18"),
                            RecipePizzaId = new Guid("289b34c2-bcdf-45a0-8b5a-4f02068210b2")
                        },
                        new
                        {
                            IngredientId = new Guid("0657ff4a-84bf-4b0a-ab54-06fbb875af8a"),
                            RecipePizzaId = new Guid("be80bb47-1ef4-467d-8c7f-e77ed692b0fe")
                        },
                        new
                        {
                            IngredientId = new Guid("4209713e-aa77-43f7-b8b1-eca4c0ad8ee9"),
                            RecipePizzaId = new Guid("be80bb47-1ef4-467d-8c7f-e77ed692b0fe")
                        },
                        new
                        {
                            IngredientId = new Guid("6226d057-efd4-4b0d-a03a-ac2633fb52cb"),
                            RecipePizzaId = new Guid("be80bb47-1ef4-467d-8c7f-e77ed692b0fe")
                        },
                        new
                        {
                            IngredientId = new Guid("ae13fcb3-c066-46d6-881b-ccf1bcdddc5b"),
                            RecipePizzaId = new Guid("be80bb47-1ef4-467d-8c7f-e77ed692b0fe")
                        },
                        new
                        {
                            IngredientId = new Guid("0489f895-910f-413c-936a-417afddbfad3"),
                            RecipePizzaId = new Guid("3e7c4ca0-def6-4330-b183-a9c9aff98ed1")
                        },
                        new
                        {
                            IngredientId = new Guid("faf7f0ad-25b0-415b-8912-aaed1a4dd950"),
                            RecipePizzaId = new Guid("3e7c4ca0-def6-4330-b183-a9c9aff98ed1")
                        },
                        new
                        {
                            IngredientId = new Guid("f5d80e36-05ba-4b66-88ca-1e6116a22de5"),
                            RecipePizzaId = new Guid("3e7c4ca0-def6-4330-b183-a9c9aff98ed1")
                        },
                        new
                        {
                            IngredientId = new Guid("bb7d0566-48ff-4387-a0bc-aae579e8394c"),
                            RecipePizzaId = new Guid("3e7c4ca0-def6-4330-b183-a9c9aff98ed1")
                        });
                });

            modelBuilder.Entity("Template.Domain.BorderAggregate.Border", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Border", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("93ef8f1e-fdb4-4d5b-a582-ea442e1948cd"),
                            Description = "Sin Borde"
                        },
                        new
                        {
                            Id = new Guid("81f2b649-eab2-491c-b27b-42ebe1fc2026"),
                            Description = "Borde de queso"
                        },
                        new
                        {
                            Id = new Guid("2c2549e9-06b2-471c-a3ca-7a854b9de0ee"),
                            Description = "Borde relleno de pepperoni"
                        },
                        new
                        {
                            Id = new Guid("4a4731dc-c1ef-4231-a555-e9c986bc6e25"),
                            Description = "Borde de ajo y mantequilla"
                        },
                        new
                        {
                            Id = new Guid("83fd4bbe-f9cf-4411-9683-3f7b4e548fbc"),
                            Description = "Borde crujiente"
                        },
                        new
                        {
                            Id = new Guid("e071459b-a95c-4fb1-ac92-6bf3ccee555f"),
                            Description = "Borde de masa fina"
                        },
                        new
                        {
                            Id = new Guid("00703883-1d97-44a1-8f0d-a9e105549723"),
                            Description = "Borde con parmesano"
                        },
                        new
                        {
                            Id = new Guid("99978b8a-a4d5-4176-9072-fcadaa8cd67b"),
                            Description = "Borde relleno de jalapeños"
                        },
                        new
                        {
                            Id = new Guid("dbb11233-1041-4bb9-8522-9be490e1f99c"),
                            Description = "Borde relleno de queso cheddar"
                        },
                        new
                        {
                            Id = new Guid("506892bb-0b3f-409e-b91c-15e3ec750fe6"),
                            Description = "Borde de pan de ajo"
                        },
                        new
                        {
                            Id = new Guid("09854117-8297-4e39-9712-b158d9ff146d"),
                            Description = "Borde sin gluten"
                        },
                        new
                        {
                            Id = new Guid("7d953028-4493-4a90-83c6-425a2b44eb36"),
                            Description = "Borde tradicional"
                        },
                        new
                        {
                            Id = new Guid("7285db60-d1f4-4fa6-a960-9e7fac32c146"),
                            Description = "Borde relleno de salchicha"
                        },
                        new
                        {
                            Id = new Guid("0da62c40-ab3c-419f-9ff2-993d902ce5b4"),
                            Description = "Borde extra crujiente"
                        },
                        new
                        {
                            Id = new Guid("1949adc8-6567-41f0-b791-eb54137764c5"),
                            Description = "Borde con especias italianas"
                        },
                        new
                        {
                            Id = new Guid("b3f53797-5a52-4a18-a071-93e73c66bec9"),
                            Description = "Borde con orégano y aceite de oliva"
                        });
                });

            modelBuilder.Entity("Template.Domain.ClientAggregate.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("CellPhone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Client", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("806b8e1d-8de5-4884-a53d-eac49a8a241b"),
                            CellPhone = "75324397",
                            Email = "davidFernando@gmil.com",
                            Name = "David"
                        });
                });

            modelBuilder.Entity("Template.Domain.IngredientsAggregate.Ingredient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Ingredients", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("06a2162e-a3ef-4a9b-9b59-efe558cb3b98"),
                            Amount = 2.0m,
                            Name = "Queso"
                        },
                        new
                        {
                            Id = new Guid("bb8ead18-a0fc-4d64-a006-70d3e7657c73"),
                            Amount = 1.5m,
                            Name = "Salsa de Tomate"
                        },
                        new
                        {
                            Id = new Guid("0489f895-910f-413c-936a-417afddbfad3"),
                            Amount = 2.5m,
                            Name = "Pepperoni"
                        },
                        new
                        {
                            Id = new Guid("0657ff4a-84bf-4b0a-ab54-06fbb875af8a"),
                            Amount = 1.0m,
                            Name = "Champiñones"
                        },
                        new
                        {
                            Id = new Guid("4209713e-aa77-43f7-b8b1-eca4c0ad8ee9"),
                            Amount = 0.8m,
                            Name = "Cebolla"
                        },
                        new
                        {
                            Id = new Guid("6226d057-efd4-4b0d-a03a-ac2633fb52cb"),
                            Amount = 1.2m,
                            Name = "Aceitunas Negras"
                        },
                        new
                        {
                            Id = new Guid("f03d8891-170e-4e51-b5b9-8c9533b6e7b9"),
                            Amount = 2.0m,
                            Name = "Jamón"
                        },
                        new
                        {
                            Id = new Guid("135a8ae8-e779-40aa-8713-006670352c08"),
                            Amount = 1.5m,
                            Name = "Piña"
                        },
                        new
                        {
                            Id = new Guid("faf7f0ad-25b0-415b-8912-aaed1a4dd950"),
                            Amount = 2.5m,
                            Name = "Tocino"
                        },
                        new
                        {
                            Id = new Guid("5d3e0af6-07d2-4396-8a9d-9362ecb1cedb"),
                            Amount = 2.5m,
                            Name = "Pollo"
                        },
                        new
                        {
                            Id = new Guid("f5d80e36-05ba-4b66-88ca-1e6116a22de5"),
                            Amount = 3.0m,
                            Name = "Carne de Res"
                        },
                        new
                        {
                            Id = new Guid("81e7fdbd-715a-41fb-a450-c49bcff1c0be"),
                            Amount = 1.8m,
                            Name = "Salsa BBQ"
                        },
                        new
                        {
                            Id = new Guid("7f4b8d20-ebaa-47bf-a527-aff38b9a7a18"),
                            Amount = 2.0m,
                            Name = "Queso Mozzarella"
                        },
                        new
                        {
                            Id = new Guid("0e9216cf-e85c-4bf5-a057-f10a4b389ec5"),
                            Amount = 1.5m,
                            Name = "Queso Parmesano"
                        },
                        new
                        {
                            Id = new Guid("d1c0ece3-ac34-45d1-bba3-d8a9428b4bcf"),
                            Amount = 1.5m,
                            Name = "Salsa Alfredo"
                        },
                        new
                        {
                            Id = new Guid("c1acc73c-205c-442e-beb0-cd1ecdc895ee"),
                            Amount = 0.7m,
                            Name = "Albahaca Fresca"
                        },
                        new
                        {
                            Id = new Guid("ae13fcb3-c066-46d6-881b-ccf1bcdddc5b"),
                            Amount = 1.0m,
                            Name = "Tomates Cherry"
                        },
                        new
                        {
                            Id = new Guid("bb7d0566-48ff-4387-a0bc-aae579e8394c"),
                            Amount = 2.8m,
                            Name = "Chorizo"
                        },
                        new
                        {
                            Id = new Guid("c83d7c12-6143-47e8-b28b-bb4c83451718"),
                            Amount = 1.0m,
                            Name = "Jalapeños"
                        },
                        new
                        {
                            Id = new Guid("ea7ff681-d972-4ac9-a6de-a62c0727e1df"),
                            Amount = 2.0m,
                            Name = "Anchoas"
                        });
                });

            modelBuilder.Entity("Template.Domain.OrderAggregate.DeliveryOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Addres")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsFree")
                        .HasColumnType("boolean");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("DeliveryOrder", (string)null);
                });

            modelBuilder.Entity("Template.Domain.OrderAggregate.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsFreeDeviliry")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("Template.Domain.OrderAggregate.Pizza", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<decimal>("AmountBase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("BorderIds")
                        .HasColumnType("uuid");

                    b.Property<int>("CountPizza")
                        .HasColumnType("integer");

                    b.Property<bool>("IsPersonalizate")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("OrderIds")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("RecipePizzaId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("BorderIds");

                    b.HasIndex("OrderIds");

                    b.HasIndex("RecipePizzaId");

                    b.ToTable("Pizza", (string)null);
                });

            modelBuilder.Entity("Template.Domain.RecipePizzaAggregate.RecipePizza", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("RecipePizza", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a5969e99-f699-49c6-aa35-59915579b5ce"),
                            Description = "Pizza clásica con salsa de tomate, mozzarella y albahaca fresca.",
                            Name = "Pizza Margarita",
                            Price = 8.5m
                        },
                        new
                        {
                            Id = new Guid("9b29438f-528b-4d43-bdcc-ea8201b88ef1"),
                            Description = "Pizza con pepperoni y queso mozzarella.",
                            Name = "Pizza Pepperoni",
                            Price = 10.0m
                        },
                        new
                        {
                            Id = new Guid("caed479b-1e3c-42b3-b284-bd18b1f8c0d6"),
                            Description = "Pizza con salsa BBQ, pollo, cebolla y queso mozzarella.",
                            Name = "Pizza BBQ Chicken",
                            Price = 12.0m
                        },
                        new
                        {
                            Id = new Guid("289b34c2-bcdf-45a0-8b5a-4f02068210b2"),
                            Description = "Pizza con jamón, piña y queso mozzarella.",
                            Name = "Pizza Hawaiian",
                            Price = 11.0m
                        },
                        new
                        {
                            Id = new Guid("be80bb47-1ef4-467d-8c7f-e77ed692b0fe"),
                            Description = "Pizza vegetariana con champiñones, pimientos, cebolla y aceitunas negras.",
                            Name = "Pizza Veggie Lovers",
                            Price = 10.0m
                        },
                        new
                        {
                            Id = new Guid("3e7c4ca0-def6-4330-b183-a9c9aff98ed1"),
                            Description = "Pizza con pepperoni, tocino, carne de res y chorizo.",
                            Name = "Pizza Meat Lovers",
                            Price = 14.0m
                        });
                });

            modelBuilder.Entity("IngredientPizza", b =>
                {
                    b.HasOne("Template.Domain.IngredientsAggregate.Ingredient", null)
                        .WithMany()
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Template.Domain.OrderAggregate.Pizza", null)
                        .WithMany()
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RecipePizzaIngredient", b =>
                {
                    b.HasOne("Template.Domain.IngredientsAggregate.Ingredient", null)
                        .WithMany()
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Template.Domain.RecipePizzaAggregate.RecipePizza", null)
                        .WithMany()
                        .HasForeignKey("RecipePizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Template.Domain.OrderAggregate.DeliveryOrder", b =>
                {
                    b.HasOne("Template.Domain.OrderAggregate.Order", "Order")
                        .WithOne("DeliveryOrders")
                        .HasForeignKey("Template.Domain.OrderAggregate.DeliveryOrder", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Template.Domain.OrderAggregate.Order", b =>
                {
                    b.HasOne("Template.Domain.ClientAggregate.Client", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Template.Domain.OrderAggregate.Pizza", b =>
                {
                    b.HasOne("Template.Domain.BorderAggregate.Border", "Borders")
                        .WithMany("Pizzas")
                        .HasForeignKey("BorderIds");

                    b.HasOne("Template.Domain.OrderAggregate.Order", "Order")
                        .WithMany("Pizzas")
                        .HasForeignKey("OrderIds")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Template.Domain.RecipePizzaAggregate.RecipePizza", "RecipePizza")
                        .WithMany("Pizzas")
                        .HasForeignKey("RecipePizzaId");

                    b.Navigation("Borders");

                    b.Navigation("Order");

                    b.Navigation("RecipePizza");
                });

            modelBuilder.Entity("Template.Domain.BorderAggregate.Border", b =>
                {
                    b.Navigation("Pizzas");
                });

            modelBuilder.Entity("Template.Domain.ClientAggregate.Client", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Template.Domain.OrderAggregate.Order", b =>
                {
                    b.Navigation("DeliveryOrders");

                    b.Navigation("Pizzas");
                });

            modelBuilder.Entity("Template.Domain.RecipePizzaAggregate.RecipePizza", b =>
                {
                    b.Navigation("Pizzas");
                });
#pragma warning restore 612, 618
        }
    }
}
